/// A type whose instances support addition and subtraction.
public trait AdditiveArithmetic refines Equatable {

  /// Returns the sum of `self` and `other`.
  ///
  /// - Requires: The result is representable in `Self`.
  fun infix+ (_ other: Self) -> Self

  /// Writes the result of `self + other` to `self`.
  ///
  /// - Requires: `self + other` is representable in `Self`.
  fun infix+= (_ other: Self) inout {
    &self = self + other
  }

  /// Returns `self` subtracted by `other`.
  ///
  /// - Requires: The result is representable in `Self`.
  fun infix- (_ other: Self) -> Self

  /// Writes the result of `self - other` to `self`.
  ///
  /// - Requires: `self - other` is representable in `Self`.
  fun infix-= (_ other: Self) inout {
    &self = self - other
  }

  /// Returns the zero value of `Self`.
  static fun zero() -> Self

}
